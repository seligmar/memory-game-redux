{"version":3,"file":"sweetalert2-react-content.umd.min.js","sources":["../src/mounts.js","../src/index.js"],"sourcesContent":["export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getContent().querySelector('#swal2-content'),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {}\nconst error = message => new Error(`sweetalert2-react-content: ${message}`)\n\nexport default function withReactContent (ParentSwal) {\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params) {\n      params = Object.assign({}, params)\n\n      params.onOpen = params.onOpen || noop\n      params.onClose = params.onClose || noop\n\n      mounts.forEach(({ key, getter }) => {\n        if (React.isValidElement(params[key])) {\n          const reactElement = params[key]\n          params[key] = ' '\n\n          let domElement\n\n          const superOnOpen = params.onOpen\n          params.onOpen = (element) => {\n            domElement = getter(ParentSwal)\n            ReactDOM.render(reactElement, domElement)\n            superOnOpen(element)\n          }\n\n          const superOnClose = params.onClose\n          params.onClose = (element) => {\n            superOnClose(element)\n            ReactDOM.unmountComponentAtNode(domElement)\n          }\n        }\n      })\n\n      return super._main(params)\n    }\n\n    update () {\n      throw error(\n        'Swal.update() is not yet supported. See https://github.com/sweetalert2/sweetalert2-react-content/issues/73',\n      )\n    }\n  }\n}\n"],"names":["mounts","key","getter","swal","getTitle","getContent","querySelector","getConfirmButton","getCancelButton","getFooter","noop","error","message","Error","ParentSwal","args","React","isValidElement","params","forEach","name","index","undefined","argsToParams","Object","assign","onOpen","onClose","domElement","reactElement","superOnOpen","element","ReactDOM","render","superOnClose","unmountComponentAtNode"],"mappings":";;;;;;muCAAO,IAAMA,EAAS,CACpB,CACEC,IAAK,QACLC,OAAQ,SAAAC,UAAQA,EAAKC,aAEvB,CACEH,IAAK,OACLC,OAAQ,SAAAC,UAAQA,EAAKE,aAAaC,cAAc,oBAElD,CACEL,IAAK,oBACLC,OAAQ,SAAAC,UAAQA,EAAKI,qBAEvB,CACEN,IAAK,mBACLC,OAAQ,SAAAC,UAAQA,EAAKK,oBAEvB,CACEP,IAAK,SACLC,OAAQ,SAAAC,UAAQA,EAAKM,eCfnBC,EAAO,aACPC,EAAQ,SAAAC,UAAW,IAAIC,2CAAoCD,YAElD,SAA2BE,waACnBA,6CACEC,MACfC,EAAMC,eAAeF,EAAK,KAAOC,EAAMC,eAAeF,EAAK,IAAK,KAC5DG,EAAS,UACb,QAAS,OAAQ,QAAQC,QAAQ,SAACC,EAAMC,QACpBC,IAAhBP,EAAKM,KACPH,EAAOE,GAAQL,EAAKM,MAGjBH,SAEAJ,EAAWS,aAAaR,sCAI5BG,UACLA,EAASM,OAAOC,OAAO,GAAIP,IAEpBQ,OAASR,EAAOQ,QAAUhB,EACjCQ,EAAOS,QAAUT,EAAOS,SAAWjB,EAEnCV,EAAOmB,QAAQ,gBAAGlB,IAAAA,IAAKC,IAAAA,UACjBc,EAAMC,eAAeC,EAAOjB,IAAO,KAIjC2B,EAHEC,EAAeX,EAAOjB,GAC5BiB,EAAOjB,GAAO,QAIR6B,EAAcZ,EAAOQ,OAC3BR,EAAOQ,OAAS,SAACK,GACfH,EAAa1B,EAAOY,GACpBkB,EAASC,OAAOJ,EAAcD,GAC9BE,EAAYC,QAGRG,EAAehB,EAAOS,QAC5BT,EAAOS,QAAU,SAACI,GAChBG,EAAaH,GACbC,EAASG,uBAAuBP,gDAKnBV,0CAIbP,EACJ"}